# Generated by Django 5.2.1 on 2025-06-11 16:25

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import users.models


class Migration(migrations.Migration):
    dependencies = [
        ("users", "0011_user_subscription_started_at_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="APIUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("endpoint", models.CharField(db_index=True, max_length=200)),
                ("method", models.CharField(max_length=10)),
                ("response_status", models.IntegerField()),
                ("response_time_ms", models.IntegerField()),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "timestamp",
                    models.DateTimeField(db_index=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(db_index=True, default=users.models.get_current_date),
                ),
                ("hour", models.IntegerField(db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name="PaymentFailure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("failed_at", models.DateTimeField()),
                ("restrictions_applied", models.BooleanField(default=True)),
                (
                    "restriction_level",
                    models.CharField(
                        choices=[
                            ("warning", "Warning"),
                            ("limited", "Limited Access"),
                            ("suspended", "Suspended"),
                        ],
                        default="warning",
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RateLimitCounter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("identifier", models.CharField(db_index=True, max_length=255)),
                ("endpoint", models.CharField(db_index=True, max_length=200)),
                ("window_start", models.DateTimeField(db_index=True)),
                (
                    "window_type",
                    models.CharField(
                        choices=[
                            ("minute", "Minute"),
                            ("hour", "Hour"),
                            ("day", "Day"),
                            ("month", "Month"),
                        ],
                        default="hour",
                        max_length=20,
                    ),
                ),
                ("count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="UsageSummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("date", models.DateField(db_index=True)),
                ("hour", models.IntegerField(blank=True, null=True)),
                ("total_requests", models.IntegerField(default=0)),
                ("successful_requests", models.IntegerField(default=0)),
                ("failed_requests", models.IntegerField(default=0)),
                ("avg_response_time", models.FloatField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name="plan",
            name="burst_limit",
            field=models.PositiveIntegerField(default=50),
        ),
        migrations.AddField(
            model_name="plan",
            name="hourly_request_limit",
            field=models.PositiveIntegerField(default=100),
        ),
        migrations.AddField(
            model_name="plan",
            name="is_metered",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="plan",
            name="monthly_request_limit",
            field=models.PositiveIntegerField(default=30000),
        ),
        migrations.AddField(
            model_name="user",
            name="cached_daily_limit",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="cached_hourly_limit",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="cached_monthly_limit",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="user",
            name="limits_cache_updated",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddIndex(
            model_name="plan",
            index=models.Index(fields=["is_active", "is_free"], name="users_plan_is_acti_3ae34b_idx"),
        ),
        migrations.AddField(
            model_name="apiusage",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="paymentfailure",
            name="user",
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name="ratelimitcounter",
            index=models.Index(
                fields=["identifier", "window_start", "window_type"],
                name="users_ratel_identif_a03380_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="ratelimitcounter",
            index=models.Index(fields=["window_start"], name="users_ratel_window__320c75_idx"),
        ),
        migrations.AddIndex(
            model_name="ratelimitcounter",
            index=models.Index(fields=["updated_at"], name="users_ratel_updated_5975cf_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="ratelimitcounter",
            unique_together={("identifier", "endpoint", "window_start", "window_type")},
        ),
        migrations.AddField(
            model_name="usagesummary",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="apiusage",
            index=models.Index(fields=["user", "date", "hour"], name="users_apius_user_id_14e7ee_idx"),
        ),
        migrations.AddIndex(
            model_name="apiusage",
            index=models.Index(fields=["user", "timestamp"], name="users_apius_user_id_2ab62d_idx"),
        ),
        migrations.AddIndex(
            model_name="apiusage",
            index=models.Index(fields=["date"], name="users_apius_date_b54a12_idx"),
        ),
        migrations.AddIndex(
            model_name="apiusage",
            index=models.Index(
                fields=["user", "endpoint", "date"],
                name="users_apius_user_id_f70bbd_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="apiusage",
            index=models.Index(
                fields=["ip_address", "date", "hour"],
                name="users_apius_ip_addr_06f1fc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="paymentfailure",
            index=models.Index(fields=["failed_at"], name="users_payme_failed__c7fb15_idx"),
        ),
        migrations.AddIndex(
            model_name="paymentfailure",
            index=models.Index(fields=["restrictions_applied"], name="users_payme_restric_c4cbe0_idx"),
        ),
        migrations.AddIndex(
            model_name="usagesummary",
            index=models.Index(fields=["user", "date"], name="users_usage_user_id_fb41b1_idx"),
        ),
        migrations.AddIndex(
            model_name="usagesummary",
            index=models.Index(fields=["date", "hour"], name="users_usage_date_56c990_idx"),
        ),
        migrations.AddIndex(
            model_name="usagesummary",
            index=models.Index(fields=["ip_address", "date"], name="users_usage_ip_addr_276fd3_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="usagesummary",
            unique_together={("user", "ip_address", "date", "hour")},
        ),
    ]
